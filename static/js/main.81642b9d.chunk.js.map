{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","components/Person.js","components/People.js","images/plus.svg","components/AddPerson.js","images/santa-hat.svg","components/Generate.js","images/santa.svg","components/Header.js","images/present.svg","components/Note.js","components/Footer.js","components/SecretSanta.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Person","state","copied","copytext","showCopied","setState","setTimeout","className","this","props","number","person","renderRemove","onClick","e","handleDeletePerson","text","window","location","origin","toString","split","join","encryptString","santa","onCopy","Component","People","santas","length","people","map","index","copyText","AddPerson","handleAddPersonChild","preventDefault","trimName","target","elements","name","value","trim","handleAddPersonParent","document","getElementById","reset","autoComplete","onSubmit","id","type","placeholder","src","plus","alt","Generate","handleGenerate","santahat","Header","href","image","Note","replace","decryptHash","mykey","present","Footer","SecretSanta","toLowerCase","console","log","hidden","message","indexOf","prevState","concat","filter","item","newArray","slice","shuffleArray","params","getSearchParameters","string","aes","encrypt","hash","decrypt","cryptojs","enc","Utf8","prmstr","prmarr","i","tmparr","search","substr","transformToArray","array","j","Math","floor","random","temp","generateErrorMessage","process","REACT_APP_ENCRYPT_KEY","style","color","fontSize","textAlign","marginTop","undefined","key","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81642b9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nclass Person extends Component {\n    state = {\n        copied: false,\n        copytext: \"Copy link\"\n    }\n\n    showCopied = () => {\n        this.setState({\n            copytext: \"Copied\"\n        })\n        setTimeout(() => {\n            this.setState({\n                copytext: \"Copy link\"\n            })\n        }, 1000)\n    }\n\n    render() {\n        return (\n            <div className=\"person\">\n                <div className=\"person__number\">\n                    {this.props.number}\n                </div>\n                <p className=\"person__name\">\n                    {this.props.person}\n                </p>\n                {\n                    (this.props.renderRemove === true)\n                    ? <button className=\"person__remove\" onClick={(e) => {this.props.handleDeletePerson(this.props.person)}}>\n                        Remove\n                    </button>\n                    : <CopyToClipboard text={window.location.origin.toString() + \"/?name=\" + this.props.person.split(\" \").join(\"%20\") + \"&key=\" + this.props.encryptString(this.props.santa)}\n                        onCopy={() => this.setState({copied: true})}>\n                        <button className=\"person__link\" onClick={this.showCopied}>\n                            {this.state.copytext}\n                        </button>\n                    </CopyToClipboard>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Person;","import React, { Component } from 'react';\nimport Person from './Person';\n\nclass People extends Component {\n    renderRemove = () => {\n        if (this.props.santas.length > 0) {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"people-container\">\n                {\n                    (this.props.people.length > 0)\n                    ? this.props.people.map((person, index) =>\n                        <Person person={person} \n                            key={person}\n                            santa={this.props.santas[index]} \n                            number={index + 1} \n                            handleDeletePerson={this.props.handleDeletePerson}\n                            renderRemove={this.renderRemove()}\n                            encryptString={this.props.encryptString}\n                            copyText={this.props.copyText}\n                        /> // pass down name\n                    )\n                    : <p className=\"empty-message\">Add a person to get started!</p>\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default People;","export default __webpack_public_path__ + \"static/media/plus.f07c0b76.svg\";","import React, { Component } from 'react';\nimport plus from '../images/plus.svg';\n\nclass AddPerson extends Component {\n    handleAddPersonChild = (e) => {\n        e.preventDefault();\n        const trimName = e.target.elements.name.value.trim();\n        this.props.handleAddPersonParent(trimName);\n        document.getElementById(\"name-form\").reset();\n    }\n\n    render() {\n        return (\n            <div className=\"form-wrap\">\n                <form autoComplete=\"off\" onSubmit={this.handleAddPersonChild} id=\"name-form\" className=\"form\">\n                    <input type=\"text\" name=\"name\" className=\"input\" placeholder=\"Enter a name...\"/>\n                    <button type=\"submit\" className=\"add\">\n                        <img src={plus} className=\"add-icon\" alt=\"plus-icon\"/>\n                        Add\n                    </button>\n                </form> \n            </div>\n        )\n    }\n}\n\nexport default AddPerson;","export default __webpack_public_path__ + \"static/media/santa-hat.a7008033.svg\";","import React from 'react';\nimport santahat from '../images/santa-hat.svg';\n\nconst Generate = (props) => {\n    return (\n        <button className=\"generate-button\" onClick={props.handleGenerate}>\n            <img src={santahat} className=\"santa-icon\" alt=\"santa-icon\" />\n            Generate Secret Santa\n        </button>\n    )\n}\n\nexport default Generate;","export default __webpack_public_path__ + \"static/media/santa.85cb042e.svg\";","import React from 'react';\nimport image from \"../images/santa.svg\";\nimport  '../App.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <a href=\"/\">\n                <img src={image} className=\"header__image\" alt=\"santa\"/>\n            </a>\n            <h1>Secret Santa Generator</h1>\n            {/* <p className=\"subtitle\">No email or signup!</p> */}\n        </div>\n    )\n}\n\nexport default Header;","export default __webpack_public_path__ + \"static/media/present.712f0c1d.svg\";","import React from 'react';\nimport present from '../images/present.svg';\n\nconst Note = (props) => {\n    return (\n        <div className=\"people-container\">\n            <div className=\"note\">\n                <h5 className=\"note__title\">Hi {props.name.replace(\"%20\", \" \")},</h5>\n                <h5>you've been assigned <span className=\"note__santa\">{props.decryptHash(props.mykey)}</span>.</h5>\n                <img src={present} className=\"note__image\" alt=\"present\"/>\n                <h5>Good luck!</h5>\n            </div>\n        </div>\n    )\n}\n\nexport default Note;","import React from 'react';\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer text-center\">\n            {/* <p>Made with <span role=\"img\" aria-label=\"heart\">❤️</span> by <a href=\"https://kristelfung.com/\">Kristel Fung</a>.</p> */}\n        </footer>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\r\nimport People from './People';\r\nimport AddPerson from './AddPerson';\r\nimport Generate from './Generate';\r\nimport Header from './Header';\r\nimport Note from './Note';\r\nimport Footer from './Footer';\r\nimport aes from 'crypto-js/aes';\r\nimport cryptojs from 'crypto-js';\r\n\r\nclass SecretSanta extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            people: [],\r\n            santas: [],\r\n            copied: false,\r\n            hidden: true,\r\n            message: \"\",\r\n            params: this.getSearchParameters()\r\n        };\r\n    }\r\n\r\n    encryptString(string) {\r\n        const key = \"123456789abcdkmr\"\r\n        return aes.encrypt(string, key)\r\n    }\r\n\r\n    decryptHash(hash) {\r\n        const key = \"123456789abcdkmr\"\r\n        const plaintext = aes.decrypt(hash.toString(), key)\r\n        return plaintext.toString(cryptojs.enc.Utf8)\r\n    }\r\n\r\n    transformToArray(prmstr) {\r\n        let params = {};\r\n        let prmarr = prmstr.split(\"&\");\r\n        for ( let i = 0; i < prmarr.length; i++) {\r\n            let tmparr = prmarr[i].split(\"=\");\r\n            params[tmparr[0]] = tmparr[1];\r\n        }\r\n        return params;\r\n    }\r\n\r\n    getSearchParameters() {\r\n        let prmstr = window.location.search.substr(1);\r\n        return prmstr !== null && prmstr !== \"\" ? this.transformToArray(prmstr) : {};\r\n    }\r\n\r\n    shuffleArray(array) { // Sattolo's algorithm\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * i);\r\n            const temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    handleAddPersonParent = (name) => {\r\n        name = name.toLowerCase();\r\n        console.log(name)\r\n        if (name === \"\") {\r\n            this.setState ({\r\n                hidden: false,\r\n                message: \"Please enter a valid name!\"\r\n            })\r\n        }\r\n        else if (this.state.people.indexOf(name) !== -1) { // -1 means in array\r\n            this.setState ({\r\n                hidden: false,\r\n                message: \"This person has already been added!\"\r\n            })\r\n        }\r\n        else { // if not blank AND not in array already\r\n            this.setState((prevState) => {\r\n                return {\r\n                    hidden: true,\r\n                    people: prevState.people.concat(name),\r\n                    santas: []\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDeletePerson = (name) => {        \r\n        this.setState((prevState) => {\r\n            return {\r\n                people: prevState.people.filter(item => item !== name)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleGenerate = () => {\r\n        const newArray = this.state.people.slice(); // copy array\r\n        const santas = this.shuffleArray(newArray);\r\n        if (this.state.people.length <= 2) {\r\n            this.setState ({\r\n              hidden: false,\r\n              message: \"You need at least 3 people to generate Secret Santas!\"\r\n            })\r\n        }\r\n        else {\r\n            this.setState(() => {\r\n                return {\r\n                    hidden: true,\r\n                    santas: santas\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Env Key:\",process.env.REACT_APP_ENCRYPT_KEY)\r\n        let generateErrorMessage;\r\n        generateErrorMessage = (\r\n          <p style={{color: \"#d53743\", fontSize: \".75rem\", textAlign: \"center\", marginTop: \"-.75rem\"}}>{this.state.message}</p>\r\n        )\r\n\r\n        if (this.state.params.name !== undefined) {\r\n            return (\r\n                <div className=\"container\">\r\n                    <Header/>\r\n                    <Note name={this.state.params.name} mykey={this.state.params.key} decryptHash={this.decryptHash}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n        <div className=\"body-wrap\">\r\n            <div className=\"container wrap\">\r\n                <Header/>\r\n                <Generate handleGenerate={this.handleGenerate}/>\r\n                {!this.state.hidden ?\r\n                  generateErrorMessage\r\n                : null}\r\n                <AddPerson handleAddPersonParent={this.handleAddPersonParent}/>\r\n                <People people={this.state.people} \r\n                    santas={this.state.santas} \r\n                    handleDeletePerson={this.handleDeletePerson} \r\n                    encryptString={this.encryptString} \r\n                />\r\n            </div> \r\n            <div className=\"container\">\r\n                <Footer/>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SecretSanta;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport SecretSanta from './components/SecretSanta';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SecretSanta />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}